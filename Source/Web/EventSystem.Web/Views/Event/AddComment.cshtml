@model EventSystem.Web.Models.Event.AddCommentInputModel
@using Resources;
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<div id="addCommentDiv" class="col-md-12">



    @using (Ajax.BeginForm("AddComment", "Event", new AjaxOptions { HttpMethod = "POST", OnComplete = "onAddCommentClickSuccess" }, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.HiddenFor(m => m.EventId)
        <h4 class="col-md-12">@Global.AddComment</h4>
        <div class="col-md-12">
            @Html.LabelFor(m => m.Title, new { @class = "col-md-3" })
            @Html.TextBoxFor(m => m.Title, new { @class = "col-md-6 form-control" })
            @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger pull-right" })
        </div>
        <div class="col-md-12">
            @Html.LabelFor(m => m.Content, new { @class = "col-md-3" })
            @Html.TextAreaFor(m => m.Content, new { @class = "col-md-6 form-control commentContent" })
            @Html.ValidationMessageFor(m => m.Content, "", new { @class = "text-danger pull-right" })
        </div>
        <div class="text-center">
            <input id="addCommentBtn" type="submit" class="btn btn-lg btn-primary btn-success" value="@Global.Add" />
        </div>
        <div id="commentMessageContainer"></div>
    }
</div>

<script>
    function ajaxValidate() {
        debugger;
        return $('form').validate().form();
    }

    function onAddCommentClickSuccess(data) {
        debugger;
        var alertMessageElement = "<div class='alert alert-" + data.responseJSON.alertType + "'><strong>" + data.responseJSON.alertMsg + "</strong></div>";
        $("#commentMessageContainer").append(alertMessageElement);
        if ($("#commentsDiv")) {
            app.loadEventComments();
        }
        setTimeout(function () {
            $($("#commentMessageContainer .alert")).fadeOut(200);

        }, 3000);
    }
</script>
